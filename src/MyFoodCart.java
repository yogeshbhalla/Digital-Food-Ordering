import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Main-Hall
 */
public class MyFoodCart extends javax.swing.JFrame {
     int totalamount=0;
  // mytablemodel ctm = new mytablemodel();
    /**
     * Creates new form MyFoodCart
     */
    mycarttablemodel ctm = new mycarttablemodel();

    public MyFoodCart() {
        initComponents();
        setVisible(true);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize);
        loadata();
        
    }
     

    

    void loadata() {
        jTable1.setModel(ctm);
        jTable1.setRowHeight(100);
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new ImageRenderer());
        int totalamount =0;
        for(foodcart fc: Global.al1)
        {
         totalamount += fc.totalprice;
        }
        lbtotalamount.setText(totalamount+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbamount = new javax.swing.JLabel();
        lbtotalamount = new javax.swing.JLabel();
        btdelete = new javax.swing.JButton();
        btedit = new javax.swing.JButton();
        btplace = new javax.swing.JButton();
        btadditem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 100, 960, 366);

        lbamount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbamount.setText("Total Amount");
        getContentPane().add(lbamount);
        lbamount.setBounds(550, 40, 140, 30);

        lbtotalamount.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        getContentPane().add(lbtotalamount);
        lbtotalamount.setBounds(650, 40, 190, 30);

        btdelete.setText("Delete Item");
        btdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btdelete);
        btdelete.setBounds(160, 490, 140, 40);

        btedit.setText("Edit Item");
        btedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditActionPerformed(evt);
            }
        });
        getContentPane().add(btedit);
        btedit.setBounds(630, 490, 140, 40);

        btplace.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btplace.setText("Place Order");
        btplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btplaceActionPerformed(evt);
            }
        });
        getContentPane().add(btplace);
        btplace.setBounds(303, 553, 310, 40);

        btadditem.setText("Add Item");
        btadditem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btadditemActionPerformed(evt);
            }
        });
        getContentPane().add(btadditem);
        btadditem.setBounds(380, 490, 160, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdeleteActionPerformed
     if(jTable1.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(this,"Select a row");
        }
        else
        {
            int confirm=JOptionPane.showConfirmDialog(this,"Are You Sure ?","Delete Item",OK_CANCEL_OPTION);
            if(confirm==JOptionPane.OK_OPTION)
            {
                int i=jTable1.getSelectedRowCount();
                Global.al1.remove(i);
                ctm.fireTableDataChanged();
                for(foodcart fc: Global.al1)
                {
                    totalamount += fc.totalprice;
                }
                lbtotalamount.setText(totalamount+"");
            }
        }
    }//GEN-LAST:event_btdeleteActionPerformed

    private void bteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditActionPerformed
   if(jTable1.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(this,"Select a row");
        }
        else
        {
            int i=jTable1.getSelectedRow();
            int quan = Integer.parseInt(JOptionPane.showInputDialog(rootPane,"No. of Items","Quantity"));
            Global.al1.get(i).quantity=quan;
            int price=Global.al1.get(i).price;
            int newtol=price*quan;
            Global.al1.get(i).totalprice=newtol;
            Global.al1.get(i).quantity=quan;
            ctm.fireTableDataChanged();
             for(foodcart fc: Global.al1)
             {
                 totalamount += fc.totalprice;
             }
             lbtotalamount.setText(totalamount+"");
            
            
            
        }
      
    }//GEN-LAST:event_bteditActionPerformed

    private void btplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btplaceActionPerformed
  
                                             
        Global.billamount=Integer.parseInt(lbtotalamount.getText());
        Global.tax =(int) (Global.billamount * .05);
        Global.paybleamount = (int)(Global.billamount + Global.tax);
        System.out.println("");
        helloworld obj= new helloworld();
        
        
    }//GEN-LAST:event_btplaceActionPerformed

    private void btadditemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btadditemActionPerformed
        placeorder obj=new placeorder();
        // TODO add your handling code here:
    }//GEN-LAST:event_btadditemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFoodCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFoodCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFoodCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFoodCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFoodCart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btadditem;
    private javax.swing.JButton btdelete;
    private javax.swing.JButton btedit;
    private javax.swing.JButton btplace;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbamount;
    private javax.swing.JLabel lbtotalamount;
    // End of variables declaration//GEN-END:variables

    class mycarttablemodel extends AbstractTableModel {

        String[] columns = {"Item Name", "Type", "Price", "Qty", "Total Price", "Photo"};

        @Override
        public int getRowCount() {
            return Global.al1.size();
        }

        @Override
        public int getColumnCount() {
            return columns.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            switch (columnIndex) {
                case 0:
                    
                    return Global.al1.get(rowIndex).itemname;
                case 1:
                    return Global.al1.get(rowIndex).type;
                case 2:
                    return Global.al1.get(rowIndex).price;
                case 3:
                    return Global.al1.get(rowIndex).quantity;
                case 4:
                    return Global.al1.get(rowIndex).totalprice;
                case 5:
                    return Global.al1.get(rowIndex).photo;
                default:
                    return null;
            }
        }

        @Override
        public String getColumnName(int column) {
            return columns[column];
        }

    }

    class ImageRenderer extends DefaultTableCellRenderer {

        JLabel lbl = new JLabel();
        ImageIcon icon = new ImageIcon("");
        BufferedImage bufferedImage, newimage;

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                boolean hasFocus, int row, int column) {
            try {
                URL url = new URL("http://localhost:8888/GetResource/" + Global.al1.get(row).photo);
                bufferedImage = ImageIO.read(url);
                newimage = resizephoto(bufferedImage, 100, 100);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            icon = new ImageIcon(newimage);
            lbl.setIcon(icon);
            lbl.setBounds(0, 0, 100, 100);
            return lbl;
        }
    }

    BufferedImage resizephoto(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
}
